schemaVersion: 2.0.0
metadata:
  name: java-ol-ear-exec-jar
  version: 0.4.0
  description: Java application stack sample that uses/runs a packaged Open Liberty runtime with a deploy ear application.
  alpha.build-dockerfile: "https://github.com/OpenLiberty/application-stack/releases/download/outer-loop-0.4.0/Dockerfile"
  alpha.deployment-manifest: "https://github.com/OpenLiberty/application-stack/releases/download/outer-loop-0.4.0/app-deploy.yaml"
starterProjects:
  - name: user-app
    git:
      remotes:
        origin: 'https://github.com/OpenLiberty/application-stack-starters.git'
components:
  - name: devruntime
    container:
        # In the original upstream of this devfile, the image used is openliberty/application-stack:<x.y.z>, which is built from the repository: https://github.com/OpenLiberty/application-stack
      image: openliberty/application-stack:0.4
      memoryLimit: 1512Mi
      mountSources: true
      endpoints:
        - exposure: public
          path: /
          name: ep1
          targetPort: 9080
          protocol: http
      env:
      - name: WLP_JAR_EXTRACT_DIR
        value: /projects
commands:
  - id: build
    exec:  
      component: devruntime 
      commandLine: earcount=$(ls -d *ear | wc -l) &&
        if [ $earcount != 1 ]; then
          echo "$earcount ear module dirs were found. One per component is expected." && exit -1;
        else
          echo "building and installing ear" && 
          cd *ear && 
          if [[ ! -d target/liberty/wlp ]]; then 
            mkdir -p target/liberty && 
            echo "...moving liberty"; mv /opt/ol/wlp target/liberty; touch ./.liberty-mv;
          elif [[ -d /projects/target/liberty/wlp && ! -e /projects/.liberty-mv ]]; then 
            echo "STACK WARNING - LIBERTY RUNTIME WAS LOADED FROM HOST";
          fi  &&
          mvn -B -f ../pom.xml -Dliberty.runtime.version=20.0.0.12  install -DskipITs &&
          mvn -B -Dliberty.runtime.version=20.0.0.12  liberty:create liberty:install-feature liberty:deploy liberty:package -Dinclude=runnable;
        fi
      workingDir: /projects
      hotReloadCapable: true
      group:
        kind: build 
        isDefault: true
  - id: run
    exec:
      component: devruntime 
      commandLine: rm -rf wlp; cd *ear; java -jar target/*.jar
      workingDir: /projects
      hotReloadCapable: false
      group:
        kind: run
        isDefault: true
  - id: run-test-off
    exec:
      component: devruntime
      commandLine: mvn -B -Dliberty.runtime.version=20.0.0.12 -Ddebug=false liberty:dev
      workingDir: /projects
      hotReloadCapable: true
      group:
        kind: run
        isDefault: false
  - id: debug
    exec:
      component: devruntime 
      commandLine: mvn -B -Dliberty.runtime.version=20.0.0.12 -DdebugPort=${DEBUG_PORT} liberty:dev -Dliberty.env.WLP_DEBUG_REMOTE=y
      workingDir: /projects
      hotReloadCapable: true
      group:
        kind: debug
        isDefault: true
  - id: test
    # The 'test' command requires an active container, so we don't need to specify the liberty runtime version
    exec:
      component: devruntime 
      commandLine: mvn -B failsafe:integration-test failsafe:verify
      workingDir: /projects
      hotReloadCapable: true
      group:
        kind: test
        isDefault: true
